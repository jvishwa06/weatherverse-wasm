@page "/register"
@using wasm.Sevices
@inject IAccountManagement Acct
@inject NavigationManager Navigation

<PageTitle>Register</PageTitle>

<h3 class="title">Create an Account</h3>

<AuthorizeView>
    <Authorized>
        <div class="alert alert-success">You're already logged in. <a href="/">Go to Dashboard</a></div>
    </Authorized>
    <NotAuthorized>
        @if (errors)
        {
            @foreach (var error in errorList)
            {
                <div class="alert alert-danger">@error</div>
            }
        }

        <!-- Registration Form -->
        <div class="register-container">
            <div class="register-box">
                <h4 class="register-title">Register</h4>
                <div>
                    <label for="email">Email:</label>
                    <input required id="email" name="emailInput" placeholder="Enter your email address" type="email" @bind-value="email" class="input-field" />
                </div>
                <div>
                    <label for="password">Password:</label>
                    <input required id="password" name="passwordInput" placeholder="Enter your password" type="password" @bind-value="password" class="input-field" />
                </div>
                <div>
                    <label for="confirmPassword">Confirm Password:</label>
                    <input required id="confirmPassword" name="confirmPasswordInput" placeholder="Confirm your password" type="password" @bind-value="confirmPassword" class="input-field" />
                </div>
                <div>
                    <button class="btn btn-primary" @onclick="DoRegisterAsync">Register</button>
                </div>

                <!-- Log In Link Below the Register Button -->
                <div class="login-link">
                    <p>Already have an account? <a href="login">Log In</a></p>
                </div>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private bool success, errors;
    private string email = string.Empty;
    private string password = string.Empty;
    private string confirmPassword = string.Empty;
    private string[] errorList = [];

    public async Task DoRegisterAsync()
    {
        success = errors = false;
        errorList = [];

        // Validate input
        if (string.IsNullOrWhiteSpace(email))
        {
            errors = true;
            errorList = new[] { "Email is required." };
            return;
        }

        if (string.IsNullOrWhiteSpace(password))
        {
            errors = true;
            errorList = new[] { "Password is required." };
            return;
        }

        if (password != confirmPassword)
        {
            errors = true;
            errorList = new[] { "Passwords do not match." };
            return;
        }

        var result = await Acct.RegisterAsync(email, password);

        if (result.Succeeded)
        {
            success = true;
            email = password = confirmPassword = string.Empty;
            Navigation.NavigateTo("/login"); // Redirect to login page after successful registration
        }
        else
        {
            errors = true;
            errorList = result.ErrorList;
        }
    }
}

<style>
    body {
        background-image: url('images/deerpurple.jpg');
        background-size: cover;
        background-position: center;
        background-attachment: fixed;
        margin: 0;
        padding: 0;
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .title {
        font-size: 36px;
        color: white;
        text-align: center;
        margin-bottom: 20px;
    }

    .register-container {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        height: 100%;
    }

    .register-box {
        background-color: rgba(0, 0, 0, 0.7); /* Semi-transparent background */
        padding: 40px;
        border-radius: 8px;
        width: 100%;
        max-width: 400px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
    }

    .register-title {
        color: white;
        font-size: 28px;
        text-align: center;
        margin-bottom: 20px;
    }

    .input-field {
        width: 100%;
        padding: 10px;
        margin: 15px 0;
        border-radius: 4px;
        border: 1px solid #ccc;
        background-color: #f5f5f5;
        font-size: 16px;
    }

    .btn {
        width: 100%;
        padding: 12px;
        font-size: 16px;
        color: white;
        background-color: #007bff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .btn:hover {
        background-color: #0056b3;
    }

    .alert {
        margin-bottom: 15px;
        font-size: 16px;
    }

    .alert-success {
        background-color: #28a745;
        color: white;
    }

    .alert-danger {
        background-color: #dc3545;
        color: white;
    }

    /* Style for the Login Link */
    .login-link {
        margin-top: 15px;
        text-align: center;
        color: white;
        font-size: 14px;
    }

    .login-link a {
        color: #007bff;
        text-decoration: none;
    }

    .login-link a:hover {
        text-decoration: underline;
    }
</style>
